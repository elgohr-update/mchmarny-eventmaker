name: Go

on:
  push:
    tags:
      - 'v*' # v0.4.4

jobs:

  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:

    - name: Setup
      uses: actions/setup-go@v2
      with:
        go-version: ^1.14
      id: go

    - name: Checkout
      id: setup
      uses: actions/checkout@v2

    - name: Tidy
      run: |
        go mod tidy 
        go mod vendor

    - name: Test
      run: go test -v -count=1 -race ./...
      
    - name: Build
      id: build-step
      run: |
        env CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -ldflags "-X main.Version=${{ github.ref }}" -mod vendor -o ./dist/eventmaker-mac ./cmd
        env CGO_ENABLED=0 GOOS=linux   GOARCH=amd64 go build -ldflags "-X main.Version=${{ github.ref }}" -mod vendor -o ./dist/eventmaker-linux ./cmd
        env CGO_ENABLED=0 GOOS=darwin  GOARCH=amd64 go build -ldflags "-X main.Version=${{ github.ref }}" -mod vendor -o ./dist/eventmaker-windows.exe ./cmd
    
    - name: Archive
      run: |
        apt-get install zip
        zip binaries.zip ./dist/eventmaker-mac ./dist/eventmaker-linux ./dist/eventmaker-windows.exe

    - name: Release
      id: release-step
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: Automatic release 
        draft: false
        prerelease: false

    - name: Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.release-step.outputs.upload_url }}
        asset_path: ./binaries.zip
        asset_name: binaries.zip
        asset_content_type: application/zip